// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dogattr.proto

#ifndef PROTOBUF_dogattr_2eproto__INCLUDED
#define PROTOBUF_dogattr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dogrun2 {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dogattr_2eproto();
void protobuf_AssignDesc_dogattr_2eproto();
void protobuf_ShutdownFile_dogattr_2eproto();

class DogLevelConfig;
class DogLevelConfigArray;
class FoodConfig;
class FoodConfigArray;
class TrainConfig;
class TrainConfigArray;
class PlayConfig;
class PlayConfigArray;
class DogAttr;

// ===================================================================

class DogLevelConfig : public ::google::protobuf::Message {
 public:
  DogLevelConfig();
  virtual ~DogLevelConfig();

  DogLevelConfig(const DogLevelConfig& from);

  inline DogLevelConfig& operator=(const DogLevelConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DogLevelConfig& default_instance();

  void Swap(DogLevelConfig* other);

  // implements Message ----------------------------------------------

  DogLevelConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DogLevelConfig& from);
  void MergeFrom(const DogLevelConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // required int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dogrun2.DogLevelConfig)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dogattr_2eproto();
  friend void protobuf_AssignDesc_dogattr_2eproto();
  friend void protobuf_ShutdownFile_dogattr_2eproto();

  void InitAsDefaultInstance();
  static DogLevelConfig* default_instance_;
};
// -------------------------------------------------------------------

class DogLevelConfigArray : public ::google::protobuf::Message {
 public:
  DogLevelConfigArray();
  virtual ~DogLevelConfigArray();

  DogLevelConfigArray(const DogLevelConfigArray& from);

  inline DogLevelConfigArray& operator=(const DogLevelConfigArray& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DogLevelConfigArray& default_instance();

  void Swap(DogLevelConfigArray* other);

  // implements Message ----------------------------------------------

  DogLevelConfigArray* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DogLevelConfigArray& from);
  void MergeFrom(const DogLevelConfigArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dogrun2.DogLevelConfig cfg = 1;
  inline int cfg_size() const;
  inline void clear_cfg();
  static const int kCfgFieldNumber = 1;
  inline const ::dogrun2::DogLevelConfig& cfg(int index) const;
  inline ::dogrun2::DogLevelConfig* mutable_cfg(int index);
  inline ::dogrun2::DogLevelConfig* add_cfg();
  inline const ::google::protobuf::RepeatedPtrField< ::dogrun2::DogLevelConfig >&
      cfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::dogrun2::DogLevelConfig >*
      mutable_cfg();

  // @@protoc_insertion_point(class_scope:dogrun2.DogLevelConfigArray)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::dogrun2::DogLevelConfig > cfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dogattr_2eproto();
  friend void protobuf_AssignDesc_dogattr_2eproto();
  friend void protobuf_ShutdownFile_dogattr_2eproto();

  void InitAsDefaultInstance();
  static DogLevelConfigArray* default_instance_;
};
// -------------------------------------------------------------------

class FoodConfig : public ::google::protobuf::Message {
 public:
  FoodConfig();
  virtual ~FoodConfig();

  FoodConfig(const FoodConfig& from);

  inline FoodConfig& operator=(const FoodConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FoodConfig& default_instance();

  void Swap(FoodConfig* other);

  // implements Message ----------------------------------------------

  FoodConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FoodConfig& from);
  void MergeFrom(const FoodConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 cd = 2;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 2;
  inline ::google::protobuf::int32 cd() const;
  inline void set_cd(::google::protobuf::int32 value);

  // required int32 consume_heart = 3;
  inline bool has_consume_heart() const;
  inline void clear_consume_heart();
  static const int kConsumeHeartFieldNumber = 3;
  inline ::google::protobuf::int32 consume_heart() const;
  inline void set_consume_heart(::google::protobuf::int32 value);

  // required int32 consume_gold = 4;
  inline bool has_consume_gold() const;
  inline void clear_consume_gold();
  static const int kConsumeGoldFieldNumber = 4;
  inline ::google::protobuf::int32 consume_gold() const;
  inline void set_consume_gold(::google::protobuf::int32 value);

  // optional int32 strong = 5;
  inline bool has_strong() const;
  inline void clear_strong();
  static const int kStrongFieldNumber = 5;
  inline ::google::protobuf::int32 strong() const;
  inline void set_strong(::google::protobuf::int32 value);

  // optional int32 speed = 6;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 6;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // optional int32 exp = 7;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 7;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 intimacy = 8;
  inline bool has_intimacy() const;
  inline void clear_intimacy();
  static const int kIntimacyFieldNumber = 8;
  inline ::google::protobuf::int32 intimacy() const;
  inline void set_intimacy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dogrun2.FoodConfig)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_consume_heart();
  inline void clear_has_consume_heart();
  inline void set_has_consume_gold();
  inline void clear_has_consume_gold();
  inline void set_has_strong();
  inline void clear_has_strong();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_intimacy();
  inline void clear_has_intimacy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 cd_;
  ::google::protobuf::int32 consume_heart_;
  ::google::protobuf::int32 consume_gold_;
  ::google::protobuf::int32 strong_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 intimacy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_dogattr_2eproto();
  friend void protobuf_AssignDesc_dogattr_2eproto();
  friend void protobuf_ShutdownFile_dogattr_2eproto();

  void InitAsDefaultInstance();
  static FoodConfig* default_instance_;
};
// -------------------------------------------------------------------

class FoodConfigArray : public ::google::protobuf::Message {
 public:
  FoodConfigArray();
  virtual ~FoodConfigArray();

  FoodConfigArray(const FoodConfigArray& from);

  inline FoodConfigArray& operator=(const FoodConfigArray& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FoodConfigArray& default_instance();

  void Swap(FoodConfigArray* other);

  // implements Message ----------------------------------------------

  FoodConfigArray* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FoodConfigArray& from);
  void MergeFrom(const FoodConfigArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dogrun2.FoodConfig cfg = 1;
  inline int cfg_size() const;
  inline void clear_cfg();
  static const int kCfgFieldNumber = 1;
  inline const ::dogrun2::FoodConfig& cfg(int index) const;
  inline ::dogrun2::FoodConfig* mutable_cfg(int index);
  inline ::dogrun2::FoodConfig* add_cfg();
  inline const ::google::protobuf::RepeatedPtrField< ::dogrun2::FoodConfig >&
      cfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::dogrun2::FoodConfig >*
      mutable_cfg();

  // @@protoc_insertion_point(class_scope:dogrun2.FoodConfigArray)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::dogrun2::FoodConfig > cfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dogattr_2eproto();
  friend void protobuf_AssignDesc_dogattr_2eproto();
  friend void protobuf_ShutdownFile_dogattr_2eproto();

  void InitAsDefaultInstance();
  static FoodConfigArray* default_instance_;
};
// -------------------------------------------------------------------

class TrainConfig : public ::google::protobuf::Message {
 public:
  TrainConfig();
  virtual ~TrainConfig();

  TrainConfig(const TrainConfig& from);

  inline TrainConfig& operator=(const TrainConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrainConfig& default_instance();

  void Swap(TrainConfig* other);

  // implements Message ----------------------------------------------

  TrainConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrainConfig& from);
  void MergeFrom(const TrainConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 cd = 2;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 2;
  inline ::google::protobuf::int32 cd() const;
  inline void set_cd(::google::protobuf::int32 value);

  // required int32 consume_heart = 3;
  inline bool has_consume_heart() const;
  inline void clear_consume_heart();
  static const int kConsumeHeartFieldNumber = 3;
  inline ::google::protobuf::int32 consume_heart() const;
  inline void set_consume_heart(::google::protobuf::int32 value);

  // required int32 consume_gold = 4;
  inline bool has_consume_gold() const;
  inline void clear_consume_gold();
  static const int kConsumeGoldFieldNumber = 4;
  inline ::google::protobuf::int32 consume_gold() const;
  inline void set_consume_gold(::google::protobuf::int32 value);

  // optional int32 strong = 5;
  inline bool has_strong() const;
  inline void clear_strong();
  static const int kStrongFieldNumber = 5;
  inline ::google::protobuf::int32 strong() const;
  inline void set_strong(::google::protobuf::int32 value);

  // optional int32 speed = 6;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 6;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // optional int32 exp = 7;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 7;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 intimacy = 8;
  inline bool has_intimacy() const;
  inline void clear_intimacy();
  static const int kIntimacyFieldNumber = 8;
  inline ::google::protobuf::int32 intimacy() const;
  inline void set_intimacy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dogrun2.TrainConfig)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_consume_heart();
  inline void clear_has_consume_heart();
  inline void set_has_consume_gold();
  inline void clear_has_consume_gold();
  inline void set_has_strong();
  inline void clear_has_strong();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_intimacy();
  inline void clear_has_intimacy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 cd_;
  ::google::protobuf::int32 consume_heart_;
  ::google::protobuf::int32 consume_gold_;
  ::google::protobuf::int32 strong_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 intimacy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_dogattr_2eproto();
  friend void protobuf_AssignDesc_dogattr_2eproto();
  friend void protobuf_ShutdownFile_dogattr_2eproto();

  void InitAsDefaultInstance();
  static TrainConfig* default_instance_;
};
// -------------------------------------------------------------------

class TrainConfigArray : public ::google::protobuf::Message {
 public:
  TrainConfigArray();
  virtual ~TrainConfigArray();

  TrainConfigArray(const TrainConfigArray& from);

  inline TrainConfigArray& operator=(const TrainConfigArray& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrainConfigArray& default_instance();

  void Swap(TrainConfigArray* other);

  // implements Message ----------------------------------------------

  TrainConfigArray* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrainConfigArray& from);
  void MergeFrom(const TrainConfigArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dogrun2.TrainConfig cfg = 1;
  inline int cfg_size() const;
  inline void clear_cfg();
  static const int kCfgFieldNumber = 1;
  inline const ::dogrun2::TrainConfig& cfg(int index) const;
  inline ::dogrun2::TrainConfig* mutable_cfg(int index);
  inline ::dogrun2::TrainConfig* add_cfg();
  inline const ::google::protobuf::RepeatedPtrField< ::dogrun2::TrainConfig >&
      cfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::dogrun2::TrainConfig >*
      mutable_cfg();

  // @@protoc_insertion_point(class_scope:dogrun2.TrainConfigArray)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::dogrun2::TrainConfig > cfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dogattr_2eproto();
  friend void protobuf_AssignDesc_dogattr_2eproto();
  friend void protobuf_ShutdownFile_dogattr_2eproto();

  void InitAsDefaultInstance();
  static TrainConfigArray* default_instance_;
};
// -------------------------------------------------------------------

class PlayConfig : public ::google::protobuf::Message {
 public:
  PlayConfig();
  virtual ~PlayConfig();

  PlayConfig(const PlayConfig& from);

  inline PlayConfig& operator=(const PlayConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayConfig& default_instance();

  void Swap(PlayConfig* other);

  // implements Message ----------------------------------------------

  PlayConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayConfig& from);
  void MergeFrom(const PlayConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 cd = 2;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 2;
  inline ::google::protobuf::int32 cd() const;
  inline void set_cd(::google::protobuf::int32 value);

  // required int32 consume_heart = 3;
  inline bool has_consume_heart() const;
  inline void clear_consume_heart();
  static const int kConsumeHeartFieldNumber = 3;
  inline ::google::protobuf::int32 consume_heart() const;
  inline void set_consume_heart(::google::protobuf::int32 value);

  // required int32 consume_gold = 4;
  inline bool has_consume_gold() const;
  inline void clear_consume_gold();
  static const int kConsumeGoldFieldNumber = 4;
  inline ::google::protobuf::int32 consume_gold() const;
  inline void set_consume_gold(::google::protobuf::int32 value);

  // optional int32 strong = 5;
  inline bool has_strong() const;
  inline void clear_strong();
  static const int kStrongFieldNumber = 5;
  inline ::google::protobuf::int32 strong() const;
  inline void set_strong(::google::protobuf::int32 value);

  // optional int32 speed = 6;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 6;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // optional int32 exp = 7;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 7;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 intimacy = 8;
  inline bool has_intimacy() const;
  inline void clear_intimacy();
  static const int kIntimacyFieldNumber = 8;
  inline ::google::protobuf::int32 intimacy() const;
  inline void set_intimacy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dogrun2.PlayConfig)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_consume_heart();
  inline void clear_has_consume_heart();
  inline void set_has_consume_gold();
  inline void clear_has_consume_gold();
  inline void set_has_strong();
  inline void clear_has_strong();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_intimacy();
  inline void clear_has_intimacy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 cd_;
  ::google::protobuf::int32 consume_heart_;
  ::google::protobuf::int32 consume_gold_;
  ::google::protobuf::int32 strong_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 intimacy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_dogattr_2eproto();
  friend void protobuf_AssignDesc_dogattr_2eproto();
  friend void protobuf_ShutdownFile_dogattr_2eproto();

  void InitAsDefaultInstance();
  static PlayConfig* default_instance_;
};
// -------------------------------------------------------------------

class PlayConfigArray : public ::google::protobuf::Message {
 public:
  PlayConfigArray();
  virtual ~PlayConfigArray();

  PlayConfigArray(const PlayConfigArray& from);

  inline PlayConfigArray& operator=(const PlayConfigArray& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayConfigArray& default_instance();

  void Swap(PlayConfigArray* other);

  // implements Message ----------------------------------------------

  PlayConfigArray* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayConfigArray& from);
  void MergeFrom(const PlayConfigArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dogrun2.PlayConfig cfg = 1;
  inline int cfg_size() const;
  inline void clear_cfg();
  static const int kCfgFieldNumber = 1;
  inline const ::dogrun2::PlayConfig& cfg(int index) const;
  inline ::dogrun2::PlayConfig* mutable_cfg(int index);
  inline ::dogrun2::PlayConfig* add_cfg();
  inline const ::google::protobuf::RepeatedPtrField< ::dogrun2::PlayConfig >&
      cfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::dogrun2::PlayConfig >*
      mutable_cfg();

  // @@protoc_insertion_point(class_scope:dogrun2.PlayConfigArray)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::dogrun2::PlayConfig > cfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dogattr_2eproto();
  friend void protobuf_AssignDesc_dogattr_2eproto();
  friend void protobuf_ShutdownFile_dogattr_2eproto();

  void InitAsDefaultInstance();
  static PlayConfigArray* default_instance_;
};
// -------------------------------------------------------------------

class DogAttr : public ::google::protobuf::Message {
 public:
  DogAttr();
  virtual ~DogAttr();

  DogAttr(const DogAttr& from);

  inline DogAttr& operator=(const DogAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DogAttr& default_instance();

  void Swap(DogAttr* other);

  // implements Message ----------------------------------------------

  DogAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DogAttr& from);
  void MergeFrom(const DogAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 lv = 2 [default = 1];
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // required int32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // required int32 star = 4;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 4;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // required int32 strong = 5;
  inline bool has_strong() const;
  inline void clear_strong();
  static const int kStrongFieldNumber = 5;
  inline ::google::protobuf::int32 strong() const;
  inline void set_strong(::google::protobuf::int32 value);

  // required int32 speed = 6;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 6;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // required int32 intimacy = 7;
  inline bool has_intimacy() const;
  inline void clear_intimacy();
  static const int kIntimacyFieldNumber = 7;
  inline ::google::protobuf::int32 intimacy() const;
  inline void set_intimacy(::google::protobuf::int32 value);

  // required int32 id = 8;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 8;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dogrun2.DogAttr)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_strong();
  inline void clear_has_strong();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_intimacy();
  inline void clear_has_intimacy();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 strong_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 intimacy_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_dogattr_2eproto();
  friend void protobuf_AssignDesc_dogattr_2eproto();
  friend void protobuf_ShutdownFile_dogattr_2eproto();

  void InitAsDefaultInstance();
  static DogAttr* default_instance_;
};
// ===================================================================


// ===================================================================

// DogLevelConfig

// required int32 lv = 1;
inline bool DogLevelConfig::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DogLevelConfig::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DogLevelConfig::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DogLevelConfig::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 DogLevelConfig::lv() const {
  return lv_;
}
inline void DogLevelConfig::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// required int32 exp = 2;
inline bool DogLevelConfig::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DogLevelConfig::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DogLevelConfig::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DogLevelConfig::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 DogLevelConfig::exp() const {
  return exp_;
}
inline void DogLevelConfig::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// DogLevelConfigArray

// repeated .dogrun2.DogLevelConfig cfg = 1;
inline int DogLevelConfigArray::cfg_size() const {
  return cfg_.size();
}
inline void DogLevelConfigArray::clear_cfg() {
  cfg_.Clear();
}
inline const ::dogrun2::DogLevelConfig& DogLevelConfigArray::cfg(int index) const {
  return cfg_.Get(index);
}
inline ::dogrun2::DogLevelConfig* DogLevelConfigArray::mutable_cfg(int index) {
  return cfg_.Mutable(index);
}
inline ::dogrun2::DogLevelConfig* DogLevelConfigArray::add_cfg() {
  return cfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dogrun2::DogLevelConfig >&
DogLevelConfigArray::cfg() const {
  return cfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::dogrun2::DogLevelConfig >*
DogLevelConfigArray::mutable_cfg() {
  return &cfg_;
}

// -------------------------------------------------------------------

// FoodConfig

// required int32 type = 1;
inline bool FoodConfig::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FoodConfig::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FoodConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FoodConfig::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 FoodConfig::type() const {
  return type_;
}
inline void FoodConfig::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 cd = 2;
inline bool FoodConfig::has_cd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FoodConfig::set_has_cd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FoodConfig::clear_has_cd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FoodConfig::clear_cd() {
  cd_ = 0;
  clear_has_cd();
}
inline ::google::protobuf::int32 FoodConfig::cd() const {
  return cd_;
}
inline void FoodConfig::set_cd(::google::protobuf::int32 value) {
  set_has_cd();
  cd_ = value;
}

// required int32 consume_heart = 3;
inline bool FoodConfig::has_consume_heart() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FoodConfig::set_has_consume_heart() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FoodConfig::clear_has_consume_heart() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FoodConfig::clear_consume_heart() {
  consume_heart_ = 0;
  clear_has_consume_heart();
}
inline ::google::protobuf::int32 FoodConfig::consume_heart() const {
  return consume_heart_;
}
inline void FoodConfig::set_consume_heart(::google::protobuf::int32 value) {
  set_has_consume_heart();
  consume_heart_ = value;
}

// required int32 consume_gold = 4;
inline bool FoodConfig::has_consume_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FoodConfig::set_has_consume_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FoodConfig::clear_has_consume_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FoodConfig::clear_consume_gold() {
  consume_gold_ = 0;
  clear_has_consume_gold();
}
inline ::google::protobuf::int32 FoodConfig::consume_gold() const {
  return consume_gold_;
}
inline void FoodConfig::set_consume_gold(::google::protobuf::int32 value) {
  set_has_consume_gold();
  consume_gold_ = value;
}

// optional int32 strong = 5;
inline bool FoodConfig::has_strong() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FoodConfig::set_has_strong() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FoodConfig::clear_has_strong() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FoodConfig::clear_strong() {
  strong_ = 0;
  clear_has_strong();
}
inline ::google::protobuf::int32 FoodConfig::strong() const {
  return strong_;
}
inline void FoodConfig::set_strong(::google::protobuf::int32 value) {
  set_has_strong();
  strong_ = value;
}

// optional int32 speed = 6;
inline bool FoodConfig::has_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FoodConfig::set_has_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FoodConfig::clear_has_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FoodConfig::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 FoodConfig::speed() const {
  return speed_;
}
inline void FoodConfig::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
}

// optional int32 exp = 7;
inline bool FoodConfig::has_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FoodConfig::set_has_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FoodConfig::clear_has_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FoodConfig::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 FoodConfig::exp() const {
  return exp_;
}
inline void FoodConfig::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 intimacy = 8;
inline bool FoodConfig::has_intimacy() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FoodConfig::set_has_intimacy() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FoodConfig::clear_has_intimacy() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FoodConfig::clear_intimacy() {
  intimacy_ = 0;
  clear_has_intimacy();
}
inline ::google::protobuf::int32 FoodConfig::intimacy() const {
  return intimacy_;
}
inline void FoodConfig::set_intimacy(::google::protobuf::int32 value) {
  set_has_intimacy();
  intimacy_ = value;
}

// -------------------------------------------------------------------

// FoodConfigArray

// repeated .dogrun2.FoodConfig cfg = 1;
inline int FoodConfigArray::cfg_size() const {
  return cfg_.size();
}
inline void FoodConfigArray::clear_cfg() {
  cfg_.Clear();
}
inline const ::dogrun2::FoodConfig& FoodConfigArray::cfg(int index) const {
  return cfg_.Get(index);
}
inline ::dogrun2::FoodConfig* FoodConfigArray::mutable_cfg(int index) {
  return cfg_.Mutable(index);
}
inline ::dogrun2::FoodConfig* FoodConfigArray::add_cfg() {
  return cfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dogrun2::FoodConfig >&
FoodConfigArray::cfg() const {
  return cfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::dogrun2::FoodConfig >*
FoodConfigArray::mutable_cfg() {
  return &cfg_;
}

// -------------------------------------------------------------------

// TrainConfig

// required int32 type = 1;
inline bool TrainConfig::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrainConfig::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrainConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrainConfig::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 TrainConfig::type() const {
  return type_;
}
inline void TrainConfig::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 cd = 2;
inline bool TrainConfig::has_cd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrainConfig::set_has_cd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrainConfig::clear_has_cd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrainConfig::clear_cd() {
  cd_ = 0;
  clear_has_cd();
}
inline ::google::protobuf::int32 TrainConfig::cd() const {
  return cd_;
}
inline void TrainConfig::set_cd(::google::protobuf::int32 value) {
  set_has_cd();
  cd_ = value;
}

// required int32 consume_heart = 3;
inline bool TrainConfig::has_consume_heart() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TrainConfig::set_has_consume_heart() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TrainConfig::clear_has_consume_heart() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TrainConfig::clear_consume_heart() {
  consume_heart_ = 0;
  clear_has_consume_heart();
}
inline ::google::protobuf::int32 TrainConfig::consume_heart() const {
  return consume_heart_;
}
inline void TrainConfig::set_consume_heart(::google::protobuf::int32 value) {
  set_has_consume_heart();
  consume_heart_ = value;
}

// required int32 consume_gold = 4;
inline bool TrainConfig::has_consume_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TrainConfig::set_has_consume_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TrainConfig::clear_has_consume_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TrainConfig::clear_consume_gold() {
  consume_gold_ = 0;
  clear_has_consume_gold();
}
inline ::google::protobuf::int32 TrainConfig::consume_gold() const {
  return consume_gold_;
}
inline void TrainConfig::set_consume_gold(::google::protobuf::int32 value) {
  set_has_consume_gold();
  consume_gold_ = value;
}

// optional int32 strong = 5;
inline bool TrainConfig::has_strong() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TrainConfig::set_has_strong() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TrainConfig::clear_has_strong() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TrainConfig::clear_strong() {
  strong_ = 0;
  clear_has_strong();
}
inline ::google::protobuf::int32 TrainConfig::strong() const {
  return strong_;
}
inline void TrainConfig::set_strong(::google::protobuf::int32 value) {
  set_has_strong();
  strong_ = value;
}

// optional int32 speed = 6;
inline bool TrainConfig::has_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TrainConfig::set_has_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TrainConfig::clear_has_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TrainConfig::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 TrainConfig::speed() const {
  return speed_;
}
inline void TrainConfig::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
}

// optional int32 exp = 7;
inline bool TrainConfig::has_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TrainConfig::set_has_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TrainConfig::clear_has_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TrainConfig::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 TrainConfig::exp() const {
  return exp_;
}
inline void TrainConfig::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 intimacy = 8;
inline bool TrainConfig::has_intimacy() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TrainConfig::set_has_intimacy() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TrainConfig::clear_has_intimacy() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TrainConfig::clear_intimacy() {
  intimacy_ = 0;
  clear_has_intimacy();
}
inline ::google::protobuf::int32 TrainConfig::intimacy() const {
  return intimacy_;
}
inline void TrainConfig::set_intimacy(::google::protobuf::int32 value) {
  set_has_intimacy();
  intimacy_ = value;
}

// -------------------------------------------------------------------

// TrainConfigArray

// repeated .dogrun2.TrainConfig cfg = 1;
inline int TrainConfigArray::cfg_size() const {
  return cfg_.size();
}
inline void TrainConfigArray::clear_cfg() {
  cfg_.Clear();
}
inline const ::dogrun2::TrainConfig& TrainConfigArray::cfg(int index) const {
  return cfg_.Get(index);
}
inline ::dogrun2::TrainConfig* TrainConfigArray::mutable_cfg(int index) {
  return cfg_.Mutable(index);
}
inline ::dogrun2::TrainConfig* TrainConfigArray::add_cfg() {
  return cfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dogrun2::TrainConfig >&
TrainConfigArray::cfg() const {
  return cfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::dogrun2::TrainConfig >*
TrainConfigArray::mutable_cfg() {
  return &cfg_;
}

// -------------------------------------------------------------------

// PlayConfig

// required int32 type = 1;
inline bool PlayConfig::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayConfig::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayConfig::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PlayConfig::type() const {
  return type_;
}
inline void PlayConfig::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 cd = 2;
inline bool PlayConfig::has_cd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayConfig::set_has_cd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayConfig::clear_has_cd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayConfig::clear_cd() {
  cd_ = 0;
  clear_has_cd();
}
inline ::google::protobuf::int32 PlayConfig::cd() const {
  return cd_;
}
inline void PlayConfig::set_cd(::google::protobuf::int32 value) {
  set_has_cd();
  cd_ = value;
}

// required int32 consume_heart = 3;
inline bool PlayConfig::has_consume_heart() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayConfig::set_has_consume_heart() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayConfig::clear_has_consume_heart() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayConfig::clear_consume_heart() {
  consume_heart_ = 0;
  clear_has_consume_heart();
}
inline ::google::protobuf::int32 PlayConfig::consume_heart() const {
  return consume_heart_;
}
inline void PlayConfig::set_consume_heart(::google::protobuf::int32 value) {
  set_has_consume_heart();
  consume_heart_ = value;
}

// required int32 consume_gold = 4;
inline bool PlayConfig::has_consume_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayConfig::set_has_consume_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayConfig::clear_has_consume_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayConfig::clear_consume_gold() {
  consume_gold_ = 0;
  clear_has_consume_gold();
}
inline ::google::protobuf::int32 PlayConfig::consume_gold() const {
  return consume_gold_;
}
inline void PlayConfig::set_consume_gold(::google::protobuf::int32 value) {
  set_has_consume_gold();
  consume_gold_ = value;
}

// optional int32 strong = 5;
inline bool PlayConfig::has_strong() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayConfig::set_has_strong() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayConfig::clear_has_strong() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayConfig::clear_strong() {
  strong_ = 0;
  clear_has_strong();
}
inline ::google::protobuf::int32 PlayConfig::strong() const {
  return strong_;
}
inline void PlayConfig::set_strong(::google::protobuf::int32 value) {
  set_has_strong();
  strong_ = value;
}

// optional int32 speed = 6;
inline bool PlayConfig::has_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayConfig::set_has_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayConfig::clear_has_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayConfig::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 PlayConfig::speed() const {
  return speed_;
}
inline void PlayConfig::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
}

// optional int32 exp = 7;
inline bool PlayConfig::has_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayConfig::set_has_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayConfig::clear_has_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayConfig::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 PlayConfig::exp() const {
  return exp_;
}
inline void PlayConfig::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 intimacy = 8;
inline bool PlayConfig::has_intimacy() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayConfig::set_has_intimacy() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayConfig::clear_has_intimacy() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayConfig::clear_intimacy() {
  intimacy_ = 0;
  clear_has_intimacy();
}
inline ::google::protobuf::int32 PlayConfig::intimacy() const {
  return intimacy_;
}
inline void PlayConfig::set_intimacy(::google::protobuf::int32 value) {
  set_has_intimacy();
  intimacy_ = value;
}

// -------------------------------------------------------------------

// PlayConfigArray

// repeated .dogrun2.PlayConfig cfg = 1;
inline int PlayConfigArray::cfg_size() const {
  return cfg_.size();
}
inline void PlayConfigArray::clear_cfg() {
  cfg_.Clear();
}
inline const ::dogrun2::PlayConfig& PlayConfigArray::cfg(int index) const {
  return cfg_.Get(index);
}
inline ::dogrun2::PlayConfig* PlayConfigArray::mutable_cfg(int index) {
  return cfg_.Mutable(index);
}
inline ::dogrun2::PlayConfig* PlayConfigArray::add_cfg() {
  return cfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dogrun2::PlayConfig >&
PlayConfigArray::cfg() const {
  return cfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::dogrun2::PlayConfig >*
PlayConfigArray::mutable_cfg() {
  return &cfg_;
}

// -------------------------------------------------------------------

// DogAttr

// required string name = 1;
inline bool DogAttr::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DogAttr::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DogAttr::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DogAttr::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DogAttr::name() const {
  return *name_;
}
inline void DogAttr::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DogAttr::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DogAttr::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DogAttr::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DogAttr::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DogAttr::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 lv = 2 [default = 1];
inline bool DogAttr::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DogAttr::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DogAttr::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DogAttr::clear_lv() {
  lv_ = 1;
  clear_has_lv();
}
inline ::google::protobuf::int32 DogAttr::lv() const {
  return lv_;
}
inline void DogAttr::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// required int32 exp = 3;
inline bool DogAttr::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DogAttr::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DogAttr::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DogAttr::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 DogAttr::exp() const {
  return exp_;
}
inline void DogAttr::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// required int32 star = 4;
inline bool DogAttr::has_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DogAttr::set_has_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DogAttr::clear_has_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DogAttr::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 DogAttr::star() const {
  return star_;
}
inline void DogAttr::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// required int32 strong = 5;
inline bool DogAttr::has_strong() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DogAttr::set_has_strong() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DogAttr::clear_has_strong() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DogAttr::clear_strong() {
  strong_ = 0;
  clear_has_strong();
}
inline ::google::protobuf::int32 DogAttr::strong() const {
  return strong_;
}
inline void DogAttr::set_strong(::google::protobuf::int32 value) {
  set_has_strong();
  strong_ = value;
}

// required int32 speed = 6;
inline bool DogAttr::has_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DogAttr::set_has_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DogAttr::clear_has_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DogAttr::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 DogAttr::speed() const {
  return speed_;
}
inline void DogAttr::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
}

// required int32 intimacy = 7;
inline bool DogAttr::has_intimacy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DogAttr::set_has_intimacy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DogAttr::clear_has_intimacy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DogAttr::clear_intimacy() {
  intimacy_ = 0;
  clear_has_intimacy();
}
inline ::google::protobuf::int32 DogAttr::intimacy() const {
  return intimacy_;
}
inline void DogAttr::set_intimacy(::google::protobuf::int32 value) {
  set_has_intimacy();
  intimacy_ = value;
}

// required int32 id = 8;
inline bool DogAttr::has_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DogAttr::set_has_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DogAttr::clear_has_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DogAttr::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DogAttr::id() const {
  return id_;
}
inline void DogAttr::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dogrun2

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dogattr_2eproto__INCLUDED
